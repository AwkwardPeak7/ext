name: CI

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!**.md'
      - '!.github/**'
      - '.github/scripts/**'
      - '.github/workflows/build_push.yml'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  CI_CHUNK_SIZE: 65

jobs:
  prepare:
    name: Prepare job
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrices.outputs.matrix }}
      delete: ${{ steps.generate-matrices.outputs.deleted }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2 # v4.2.2

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4.2.2 # v4.2.2

      - name: Last Successful Commit Run
        id: last_successful_commit
        uses: nrwl/last-successful-commit-action@v1
        with:
          workflow_id: 'CI'
          branch: 'main'
      
      - id: generate-matrices
        name: Create output matrices
        run: |
          python ./.github/scripts/modules-to-build.py ${{ steps.last_successful_commit.outputs.commit_hash }}

  build_individual:
    name: Build individual modules
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4.2.2 # v4.2.2

      - name: Set up JDK
        uses: actions/setup-java@v4.6.0 # v4.6.0
        with:
          java-version: 17
          distribution: temurin

      - name: Prepare signing key
        run: |
          echo ${{ secrets.SIGNING_KEY }} | base64 -d > signingkey.jks

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.2.2 # v4.2.2
        with:
          cache-read-only: ${{ matrix.chunk.num != 0 }}
      
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Build extensions (chunk ${{ matrix.chunk.num }})
        env:
          ALIAS: ${{ secrets.ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew --no-daemon $(echo '${{ toJson(matrix.chunk.modules) }}'

      - name: Upload APKs (chunk ${{ matrix.chunk.num }})
        uses: actions/upload-artifact@v4.5.0 # v4.5.0
        if: "github.repository == 'keiyoushi/extensions-source'"
        with:
          name: "individual-apks-${{ matrix.chunk.num }}"
          path: "**/*.apk"
          retention-days: 1

      - name: Clean up CI files
        run: rm signingkey.jks

  publish_repo:
    name: Publish repo
    needs:
      - build_individual
    if: "github.repository == 'keiyoushi/extensions-source'"
    runs-on: ubuntu-latest
    steps:
      - name: Download APK artifacts
        uses: actions/download-artifact@v4.1.8 # v4.1.8
        with:
          path: ~/apk-artifacts

      - name: Set up JDK
        uses: actions/setup-java@v4.6.0 # v4.6.0
        with:
          java-version: 17
          distribution: temurin

      - name: Checkout main branch
        uses: actions/checkout@v4.2.2 # v4.2.2
        with:
          ref: main
          path: main

      - name: Checkout repo branch
        uses: actions/checkout@v4.2.2 # v4.2.2
        with:
          repository: keiyoushi/extensions
          token: ${{ secrets.BOT_PAT }}
          ref: repo
          path: repo

      - name: Create repo artifacts
        run: |
          cd main
          python ./.github/scripts/move-built-apks.py
          INSPECTOR_LINK="$(curl -s "https://api.github.com/repos/keiyoushi/extensions-inspector/releases/latest" | jq -r '.assets[0].browser_download_url')"
          curl -L "$INSPECTOR_LINK" -o ./Inspector.jar
          java -jar ./Inspector.jar "repo/apk" "output.json" "tmp"
          python ./.github/scripts/create-repo.py

      - name: Merge & Deploy repo
        run: |
          cd repo
          python ../main/.github/scripts/merge-repo.py ${{ needs.prepare.outputs.delete }}
          ../main/.github/scripts/commit-repo.sh
